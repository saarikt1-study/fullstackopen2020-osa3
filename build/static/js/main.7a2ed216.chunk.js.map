{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Line.js","components/Persons.js","services/phoneBook.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addLine","name","handleNameChange","number","handleNumberChange","type","Line","person","deleteLine","toLowerCase","includes","onClick","id","Persons","persons","map","key","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","style","fontSize","color","border","marginBottom","padding","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","useEffect","phoneBookService","initialPersons","find","p","window","confirm","setTimeout","changeNumber","newPerson","updatedPerson","catch","event","target","preventDefault","lineObject","some","returnedLine","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a2ed216.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, handleFilterChange }) => (\n  <div>\n    filter: <input\n              value={filter}\n              onChange={handleFilterChange}/>\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.addLine}>\n    <div>\n      name: <input \n              value={props.name}\n              onChange={props.handleNameChange}\n            />\n    </div>\n    <div>\n      number: <input\n                value={props.number}\n                onChange={props.handleNumberChange}\n              />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Line = ({ person, filter, deleteLine }) => {\n  if (!filter || person.name.toLowerCase().includes(filter.toLowerCase())) {\n    return (\n      <div>\n        {person.name}: {person.number}\n        <button onClick={() => deleteLine(person.id)}>delete</button>\n      </div>\n    )\n  }\n  else return null\n}\n\nexport default Line","import React from 'react'\nimport Line from './Line'\n\nconst Persons = (props) => (\n  <div>\n    {props.persons.map((person) => \n      <Line \n        key={person.id} \n        person={person} \n        filter={props.filter}\n        deleteLine={props.deleteLine(person.id)}\n      />\n    )}\n  </div>\n)\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  const notificationStyle = {\n    fontSize: 24,\n    color: 'green',\n    border: 'green 2px solid',\n    marginBottom: 20,\n    padding: 10\n  }\n\n  const errorStyle = {\n    fontSize: 24,\n    color: 'red',\n    border: 'red 2px solid',\n    marginBottom: 20,\n    padding: 10\n  }\n  \n  if (message === null) {\n    return null\n  }\n  else if (message.includes('ERROR')) {\n    return (\n      <div style={errorStyle}>\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport phoneBookService from './services/phoneBook'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n\n  useEffect(() => {\n    phoneBookService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value) \n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const deleteLine = (id) => {\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n      phoneBookService.deletePerson(person.id)\n      setPersons(persons.filter(person => person.id !== id))\n\n      setNotificationMessage(\n        `${person.name} deleted from the phonebook!`\n      )\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 2000)\n    }\n  }\n  \n  const addLine = (event) => {\n    event.preventDefault()\n    const lineObject = { \n      name: newName, \n      number: newNumber\n    }\n\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        \n        const person = persons.find(p => p.name === newName)\n        changeNumber(person.id, lineObject)\n      } \n    }\n    else {\n      phoneBookService\n        .create(lineObject)\n        .then(returnedLine => {\n          setNotificationMessage(\n            `${returnedLine.name} added to the phonebook!`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 4000)\n          setPersons(persons.concat(returnedLine))\n        })\n        .catch(error => {\n          setNotificationMessage(\n            `ERROR: ${error.response.data.error}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 4000)\n        })\n      }\n\n      setNewName('')\n      setNewNumber('')\n  }\n\n  const changeNumber = (id, newPerson) => {\n    phoneBookService\n      .update(id, newPerson)\n      .then(response => {\n        const updatedPerson = persons.find(p => p.name === response.name)\n        updatedPerson.number = newPerson.number\n        setPersons(persons.map(person => person.id === newPerson.id ? updatedPerson : person))\n        \n        setNotificationMessage(\n          ` Number changed for ${updatedPerson.name}`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 2000)\n      })\n      .catch(() => {\n        setNotificationMessage(\n          `ERROR: Couldn't find ${newPerson.name} from the server anymore.`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000) \n        setPersons(persons.filter(p => p.id !== id))\n      })\n  }\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage}/>\n      <Filter \n        filter={newFilter} \n        handleFilterChange={handleFilterChange}\n      />\n\n      <h2>Add a new number</h2> \n      <PersonForm \n        addLine={addLine} \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        name={newName}\n        number={newNumber}\n      />\n      \n      <h2>Numbers</h2>\n      <Persons \n        persons={persons}\n        filter={newFilter}\n        deleteLine={() => deleteLine}\n      />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}